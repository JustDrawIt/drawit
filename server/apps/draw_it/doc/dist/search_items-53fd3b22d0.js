searchNodes=[{"doc":"The core Elixir application for DrawIt, containing all the contexts that define your domain and business logic.ContextsDrawIt is divided into contexts, which can be thought of as features or groups of closely related features.Each context defines a single module with a public API.All other modules within the context are private and must never be called from outside the context.Each context manages its own data and persistence, regardless if it comes from the database, an external API, or others.Each domain only interacts with other contexts through their public API functions.DrawIt provides the following contexts:TODO: list contexts hereSupporting ApplicationsThe DrawIt platform also contains supporting applications.DrawItWeb: A lightweight Phoenix application which handles HTTP and Websocket requests.","ref":"DrawIt.html","title":"DrawIt","type":"module"},{"doc":"A GenServer used for managing a game's state.To create a game server, start by passing an existing %DrawIt.Games.Game{} into start_link/1.{:ok, game} = Games.create_game(%{}) {:ok, server} = GameServer.start_link(game: game)Once the server is created, you can use the returned server pid or the game's join_code to interact with the game server.{:ok, player1} = GameServer.join(server, %{nickname: &quot;Ben&quot;}) {:ok, player2} = GameServer.join(game.join_code, %{nickname: &quot;Wendy&quot;}) {:ok, round} = GameServer.start_round(game.join_code, %{}) :ok = GameServer.end_round(game.join_code, %{})","ref":"DrawIt.GameServer.html","title":"DrawIt.GameServer","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"DrawIt.GameServer.html#child_spec/1","title":"DrawIt.GameServer.child_spec/1","type":"function"},{"doc":"","ref":"DrawIt.GameServer.html#end_round/2","title":"DrawIt.GameServer.end_round/2","type":"function"},{"doc":"","ref":"DrawIt.GameServer.html#guess/2","title":"DrawIt.GameServer.guess/2","type":"function"},{"doc":"","ref":"DrawIt.GameServer.html#join/2","title":"DrawIt.GameServer.join/2","type":"function"},{"doc":"","ref":"DrawIt.GameServer.html#start_link/1","title":"DrawIt.GameServer.start_link/1","type":"function"},{"doc":"","ref":"DrawIt.GameServer.html#start_round/2","title":"DrawIt.GameServer.start_round/2","type":"function"},{"doc":"","ref":"DrawIt.GameServer.html#whereis/1","title":"DrawIt.GameServer.whereis/1","type":"function"},{"doc":"This module defines a struct that represents the game state for GameServer.","ref":"DrawIt.GameServer.State.html","title":"DrawIt.GameServer.State","type":"module"},{"doc":"The Games context.","ref":"DrawIt.Games.html","title":"DrawIt.Games","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking game changes.Examplesiex&gt; change_game(game) %Ecto.Changeset{source: %Game{}}","ref":"DrawIt.Games.html#change_game/1","title":"DrawIt.Games.change_game/1","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking player changes.Examplesiex&gt; change_player(player) %Ecto.Changeset{source: %Player{}}","ref":"DrawIt.Games.html#change_player/1","title":"DrawIt.Games.change_player/1","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking round changes.Examplesiex&gt; change_round(round) %Ecto.Changeset{source: %Round{}}","ref":"DrawIt.Games.html#change_round/1","title":"DrawIt.Games.change_round/1","type":"function"},{"doc":"Creates a game.Examplesiex&gt; create_game(%{field: value}) {:ok, %Game{}} iex&gt; create_game(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#create_game/1","title":"DrawIt.Games.create_game/1","type":"function"},{"doc":"Creates a player.Examplesiex&gt; create_player(%{field: value}) {:ok, %Player{}} iex&gt; create_player(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#create_player/1","title":"DrawIt.Games.create_player/1","type":"function"},{"doc":"Creates a round.Examplesiex&gt; create_round(%{field: value}) {:ok, %Round{}} iex&gt; create_round(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#create_round/1","title":"DrawIt.Games.create_round/1","type":"function"},{"doc":"Deletes a game.Examplesiex&gt; delete_game(game) {:ok, %Game{}} iex&gt; delete_game(game) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#delete_game/1","title":"DrawIt.Games.delete_game/1","type":"function"},{"doc":"Deletes a player.Examplesiex&gt; delete_player(player) {:ok, %Player{}} iex&gt; delete_player(player) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#delete_player/1","title":"DrawIt.Games.delete_player/1","type":"function"},{"doc":"Deletes a round.Examplesiex&gt; delete_round(round) {:ok, %Round{}} iex&gt; delete_round(round) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#delete_round/1","title":"DrawIt.Games.delete_round/1","type":"function"},{"doc":"Gets a single game.Raises Ecto.NoResultsError if the Game does not exist.Examplesiex&gt; get_game!(123) %Game{} iex&gt; get_game!(456) ** (Ecto.NoResultsError)","ref":"DrawIt.Games.html#get_game!/1","title":"DrawIt.Games.get_game!/1","type":"function"},{"doc":"Gets a single game from it's join code.Raises Ecto.NoResultsError if the Game does not exist.Examplesiex&gt; get_game_by_join_code!(&quot;EVsMPJF&quot;) %Game{} iex&gt; get_game_by_join_code!(&quot;nOooOpE&quot;) ** (Ecto.NoResultsError)","ref":"DrawIt.Games.html#get_game_by_join_code!/1","title":"DrawIt.Games.get_game_by_join_code!/1","type":"function"},{"doc":"Gets a single player.Raises Ecto.NoResultsError if the Player does not exist.Examplesiex&gt; get_player!(123) %Player{} iex&gt; get_player!(456) ** (Ecto.NoResultsError)","ref":"DrawIt.Games.html#get_player!/1","title":"DrawIt.Games.get_player!/1","type":"function"},{"doc":"Gets a single round.Raises Ecto.NoResultsError if the Round does not exist.Examplesiex&gt; get_round!(123) %Round{} iex&gt; get_round!(456) ** (Ecto.NoResultsError)","ref":"DrawIt.Games.html#get_round!/1","title":"DrawIt.Games.get_round!/1","type":"function"},{"doc":"Returns the list of players in a game.Examplesiex&gt; list_game_players(42) [%Player{}, ...]","ref":"DrawIt.Games.html#list_game_players/1","title":"DrawIt.Games.list_game_players/1","type":"function"},{"doc":"Returns the list of game_rounds.Examplesiex&gt; list_game_rounds() [%Round{}, ...]","ref":"DrawIt.Games.html#list_game_rounds/0","title":"DrawIt.Games.list_game_rounds/0","type":"function"},{"doc":"Returns the list of games.Examplesiex&gt; list_games() [%Game{}, ...]","ref":"DrawIt.Games.html#list_games/0","title":"DrawIt.Games.list_games/0","type":"function"},{"doc":"Updates a game.Examplesiex&gt; update_game(game, %{field: new_value}) {:ok, %Game{}} iex&gt; update_game(game, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#update_game/2","title":"DrawIt.Games.update_game/2","type":"function"},{"doc":"Updates a player.Examplesiex&gt; update_player(player, %{field: new_value}) {:ok, %Player{}} iex&gt; update_player(player, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#update_player/2","title":"DrawIt.Games.update_player/2","type":"function"},{"doc":"Updates a round.Examplesiex&gt; update_round(round, %{field: new_value}) {:ok, %Round{}} iex&gt; update_round(round, %{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"DrawIt.Games.html#update_round/2","title":"DrawIt.Games.update_round/2","type":"function"},{"doc":"This module holds the schema, changeset, and any query helpers for games.","ref":"DrawIt.Games.Game.html","title":"DrawIt.Games.Game","type":"module"},{"doc":"","ref":"DrawIt.Games.Game.html#with_players/1","title":"DrawIt.Games.Game.with_players/1","type":"function"},{"doc":"","ref":"DrawIt.Games.Game.html#with_rounds/1","title":"DrawIt.Games.Game.with_rounds/1","type":"function"},{"doc":"This module holds the schema, changeset, and any query helpers for game players.","ref":"DrawIt.Games.Player.html","title":"DrawIt.Games.Player","type":"module"},{"doc":"This module holds the schema, changeset, and any query helpers for game rounds.","ref":"DrawIt.Games.Round.html","title":"DrawIt.Games.Round","type":"module"},{"doc":"","ref":"DrawIt.Games.Round.html#with_player_drawer/1","title":"DrawIt.Games.Round.with_player_drawer/1","type":"function"},{"doc":"A module used for generating random drawable words based on difficulty. See word/0 and word/1 for more.","ref":"DrawIt.RandomWords.html","title":"DrawIt.RandomWords","type":"module"},{"doc":"","ref":"DrawIt.RandomWords.html#all_words/0","title":"DrawIt.RandomWords.all_words/0","type":"function"},{"doc":"","ref":"DrawIt.RandomWords.html#load_words/1","title":"DrawIt.RandomWords.load_words/1","type":"function"},{"doc":"Returns a random word of any difficulty.","ref":"DrawIt.RandomWords.html#word/0","title":"DrawIt.RandomWords.word/0","type":"function"},{"doc":"Returns a random word based on difficulty.","ref":"DrawIt.RandomWords.html#word/1","title":"DrawIt.RandomWords.word/1","type":"function"},{"doc":"","ref":"DrawIt.RandomWords.html#t:difficulty/0","title":"DrawIt.RandomWords.difficulty/0","type":"type"},{"doc":"","ref":"DrawIt.Repo.html","title":"DrawIt.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3.","ref":"DrawIt.Repo.html#aggregate/3","title":"DrawIt.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4.","ref":"DrawIt.Repo.html#aggregate/4","title":"DrawIt.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2.","ref":"DrawIt.Repo.html#all/2","title":"DrawIt.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2.","ref":"DrawIt.Repo.html#checkout/2","title":"DrawIt.Repo.checkout/2","type":"function"},{"doc":"","ref":"DrawIt.Repo.html#child_spec/1","title":"DrawIt.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0.","ref":"DrawIt.Repo.html#config/0","title":"DrawIt.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1.","ref":"DrawIt.Repo.html#default_options/1","title":"DrawIt.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2.","ref":"DrawIt.Repo.html#delete/2","title":"DrawIt.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2.","ref":"DrawIt.Repo.html#delete!/2","title":"DrawIt.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2.","ref":"DrawIt.Repo.html#delete_all/2","title":"DrawIt.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2.","ref":"DrawIt.Repo.html#exists?/2","title":"DrawIt.Repo.exists?/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3.","ref":"DrawIt.Repo.html#get/3","title":"DrawIt.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3.","ref":"DrawIt.Repo.html#get!/3","title":"DrawIt.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3.","ref":"DrawIt.Repo.html#get_by/3","title":"DrawIt.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3.","ref":"DrawIt.Repo.html#get_by!/3","title":"DrawIt.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0.","ref":"DrawIt.Repo.html#get_dynamic_repo/0","title":"DrawIt.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0.","ref":"DrawIt.Repo.html#in_transaction?/0","title":"DrawIt.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2.","ref":"DrawIt.Repo.html#insert/2","title":"DrawIt.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2.","ref":"DrawIt.Repo.html#insert!/2","title":"DrawIt.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3.","ref":"DrawIt.Repo.html#insert_all/3","title":"DrawIt.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2.","ref":"DrawIt.Repo.html#insert_or_update/2","title":"DrawIt.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2.","ref":"DrawIt.Repo.html#insert_or_update!/2","title":"DrawIt.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2.","ref":"DrawIt.Repo.html#load/2","title":"DrawIt.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2.","ref":"DrawIt.Repo.html#one/2","title":"DrawIt.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2.","ref":"DrawIt.Repo.html#one!/2","title":"DrawIt.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3.","ref":"DrawIt.Repo.html#preload/3","title":"DrawIt.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3.","ref":"DrawIt.Repo.html#prepare_query/3","title":"DrawIt.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1.","ref":"DrawIt.Repo.html#put_dynamic_repo/1","title":"DrawIt.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query/4 for more information.","ref":"DrawIt.Repo.html#query/3","title":"DrawIt.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query!/4 for more information.","ref":"DrawIt.Repo.html#query!/3","title":"DrawIt.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1.","ref":"DrawIt.Repo.html#rollback/1","title":"DrawIt.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1.","ref":"DrawIt.Repo.html#start_link/1","title":"DrawIt.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1.","ref":"DrawIt.Repo.html#stop/1","title":"DrawIt.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2.","ref":"DrawIt.Repo.html#stream/2","title":"DrawIt.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"DrawIt.Repo.html#to_sql/2","title":"DrawIt.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2.","ref":"DrawIt.Repo.html#transaction/2","title":"DrawIt.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2.","ref":"DrawIt.Repo.html#update/2","title":"DrawIt.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2.","ref":"DrawIt.Repo.html#update!/2","title":"DrawIt.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3.","ref":"DrawIt.Repo.html#update_all/3","title":"DrawIt.Repo.update_all/3","type":"function"},{"doc":"Define commonly used imports for all Ecto.Schemas here.Exampledefmodule DrawIt.Context.Schema do use DrawIt.Schema end","ref":"DrawIt.Schema.html","title":"DrawIt.Schema","type":"module"}]